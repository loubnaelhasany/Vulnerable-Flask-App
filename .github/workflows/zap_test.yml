name: ZAP-Test

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Setup Python environment
      - name: Setup Python 3.7.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.10

      # Install Python dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-owasp-zap-v2.4

      # Install PyRaider
      - name: Install PyRaider
        run: pip install pyraider

      # Run PyRaider security scan
      - name: Run PyRaider Scan
        run: pyraider scan

      # Print working directory
      - name: Get Working Directory
        run: echo "$(pwd)"

      # Build Docker image
      - name: Build Docker Image
        run: docker build -t vulnerable-app .

      # Install OWASP ZAP
      - name: Install OWASP ZAP
        run: |
          mkdir -p ./zap
          cd ./zap
          wget -N https://github.com/zaproxy/zaproxy/releases/download/v2.9.0/ZAP_2.9.0_Linux.tar.gz
          tar -zxvf ZAP_2.9.0_Linux.tar.gz
          rm ZAP_2.9.0_Linux.tar.gz
          cd ZAP_2.9.0/plugin
          wget https://github.com/zaproxy/zap-extensions/releases/download/exportreport-v6/exportreport-alpha-6.zap
          chmod +x ../../zap.sh

      # Run the vulnerable application as a container
      - name: Run Docker Container
        run: docker run -d -p 5050:5050 vulnerable-app

      # Start ZAP Daemon
      - name: Run ZAP Daemon
        run: |
          ./zap/ZAP_2.9.0/zap.sh -daemon -host 0.0.0.0 -port 8090 \
            -config api.addrs.addr.name=".*" \
            -config api.addrs.addr.regex=true \
            -config api.disablekey=true > /dev/null &

      # Wait for ZAP to initialize
      - name: Wait for ZAP Initialization
        uses: jakejarvis/wait-action@master
        with:
          time: '20s'

      # Run Test Automation using ZAP
      - name: Run Test Automation with ZAP
        run: |
          cd ./tests/
          python e2e_zap.py

      # Upload the ZAP scan report
      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v1
        with:
          name: zap-scan-report
          path: ./tests/zap-report.json
